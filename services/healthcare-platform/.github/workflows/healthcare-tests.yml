name: üè• Healthcare Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  fhir-validation:
    name: üî¨ FHIR Validation
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Test FHIR endpoints
        run: |
          echo "üî¨ Testing FHIR R4 compliance..."
          npm run build
          # Test FHIR metadata endpoint
          node -e "
            const handler = require('./lambda-fhir.js').handler;
            handler({path: '/fhir/metadata'}).then(res => {
              const body = JSON.parse(res.body);
              if (body.resourceType === 'CapabilityStatement') {
                console.log('‚úÖ FHIR metadata endpoint working');
              } else {
                console.log('‚ùå FHIR metadata endpoint failed');
                process.exit(1);
              }
            });
          "

  nphies-integration:
    name: üá∏üá¶ NPHIES Integration Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Test NPHIES endpoints
        run: |
          echo "üá∏üá¶ Testing NPHIES integration..."
          # Test eligibility endpoint
          node -e "
            const handler = require('./lambda-nphies.js').handler;
            handler({path: '/nphies/eligibility', httpMethod: 'POST'}).then(res => {
              const body = JSON.parse(res.body);
              if (body.resourceType === 'CoverageEligibilityResponse') {
                console.log('‚úÖ NPHIES eligibility endpoint working');
              } else {
                console.log('‚ùå NPHIES eligibility endpoint failed');
                process.exit(1);
              }
            });
          "
          
          # Test claim endpoint
          node -e "
            const handler = require('./lambda-nphies.js').handler;
            handler({path: '/nphies/claim', httpMethod: 'POST'}).then(res => {
              const body = JSON.parse(res.body);
              if (body.resourceType === 'Claim') {
                console.log('‚úÖ NPHIES claim endpoint working');
              } else {
                console.log('‚ùå NPHIES claim endpoint failed');
                process.exit(1);
              }
            });
          "

  accessibility-tests:
    name: ‚ôø Accessibility Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Build application
        run: npm run build
      
      - name: Run accessibility tests
        run: |
          echo "‚ôø Running accessibility validation..."
          # Check for aria-labels
          if grep -r "aria-label" src/components/ > /dev/null; then
            echo "‚úÖ ARIA labels found"
          else
            echo "‚ö†Ô∏è Consider adding more ARIA labels"
          fi
          
          # Check for semantic HTML
          if grep -r "button\|nav\|main\|section" src/components/ > /dev/null; then
            echo "‚úÖ Semantic HTML elements found"
          else
            echo "‚ö†Ô∏è Consider using more semantic HTML"
          fi
